name: Build

on:
  push:
    branches:
      - main
    paths-ignore:
      - '.github/**'
      - '!.github/workflows/**'
      - '!.github/scripts/generate_results_markdown.sh'
      - 'README.md'
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref }}
  cancel-in-progress: ${{ startsWith(github.ref, 'refs/pull/') }}


jobs:
#  UpdateWiki:
#    name: Update wiki results pages
#    runs-on: ubuntu-latest
#    steps:
#    - name: Clone tree
#      uses: actions/checkout@v4
#      with:
#        path: results
#    - name: Clone wiki
#      uses: actions/checkout@v2
#      with:
#        repository: ${{github.repository}}.wiki
#        path: wiki
#    - name: Generate wiki content
#      run: |
#        ./results/.github/scripts/generate_results_markdown.sh results wiki
#    - name: Commit changes
#      run: |
#        cd wiki
#        find .
#        git config --local user.email "$GITHUB_ACTOR+github-actions@users.noreply.github.com"
#        git config --local user.name "$GITHUB_ACTOR via action"
#        git add .
#        git diff-index --quiet HEAD || git commit -m "Update from github action $GITHUB_RUN_NUMBER - $GITHUB_SHA"
#        git push


  find-changes:
    runs-on: ubuntu-latest
    permissions:
      pull-requests: read
    outputs:
      results: ${{ steps.filter.outputs.results }}
      docker: ${{ steps.filter.outputs.docker }}
    steps:
      - uses: actions/checkout@v4
      - uses: dorny/paths-filter@v3
        id: filter
        with:
          filters: |
            results:
              - '.github/workflows/*.yml'
              - '.github/scripts/**'
              - 'tests/**'
              - 'pyproject.toml'
              - 'README.md'
              - 'LICENSE.txt'
            docker:
              - '.github/workflows/*.yml'
              - 'Dockerfile'
              - '.docker/**'


  build-container:
    needs: [find-changes]
    name: Build and Publish Docker Image
    runs-on: ubuntu-latest
    if: needs.find-changes.outputs.docker == 'true'
    timeout-minutes: 20
    permissions:
      packages: write
    steps:
      - name: Clone Tree
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Extract image metadata (tags, labels)
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/main' }}
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push image
        uses: docker/build-push-action@v6
        with:
          context: .
          push: ${{ github.event_name == 'push' && github.ref == 'refs/heads/main' }}
          tags: |
            ${{ steps.meta.outputs.tags }}
            "${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest"
          labels: ${{ steps.meta.outputs.labels }}
