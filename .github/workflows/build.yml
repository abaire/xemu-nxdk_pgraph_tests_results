name: Build

on:
  push:
    branches:
      - main
  pull_request:
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref }}
  cancel-in-progress: ${{ startsWith(github.ref, 'refs/pull/') }}


jobs:
  find-changes:
    runs-on: ubuntu-latest
    permissions:
      pull-requests: read
    outputs:
      wiki: ${{ steps.filter.outputs.wiki }}
      docker: ${{ steps.filter.outputs.docker }}
    steps:
      - uses: actions/checkout@v4
      - uses: dorny/paths-filter@v3
        id: filter
        with:
          filters: |
            wiki:
              - '.github/workflows/*.yml'
              - 'results/**'
              - 'compare-results/**'
            scripts:
              - '.github/workflows/*.yml'
              - 'compare.py'
              - 'execute.py'

  DiffAgainstHW:
    needs: [find-changes]
    name: Diff new results against Xbox hardware results
    runs-on: ubuntu-latest
    if: needs.find-changes.outputs.wiki == 'true'
    permissions:
      contents: write
    steps:
    - name: Clone tree
      uses: actions/checkout@v4
      with:
        fetch-depth: '1'
    - name: Install requirements
      run: |
          sudo apt-get update
          sudo apt-get install -y \
            perceptualdiff

          export PIP_BREAK_SYSTEM_PACKAGES=1
          pip3 install -r requirements.txt
          pip3 install -r .github/scripts/requirements.txt
    - name: Generate new diffs
      run: |
        python3 .github/scripts/generate_missing_hw_diffs.py
    - name: Commit changes
      if: github.ref == 'refs/heads/main' && github.event_name == 'push'
      run: |
        git config --local user.email "$GITHUB_ACTOR+github-actions@users.noreply.github.com"
        git config --local user.name "$GITHUB_ACTOR via action"
        git add .
        git diff-index --quiet HEAD || git commit -m "Auto generated diffs against HW results $GITHUB_RUN_NUMBER - $GITHUB_SHA"
        git push
    

  UpdateWiki:
    name: Update wiki results pages
    runs-on: ubuntu-latest
    needs: [find-changes, DiffAgainstHW]
    if: needs.find-changes.outputs.wiki == 'true'
    permissions:
      contents: write
    steps:
    - name: Clone tree
      uses: actions/checkout@v4
      with:
        fetch-depth: '1'
        path: results
    - name: Clone wiki
      uses: actions/checkout@v4
      with:
        repository: ${{github.repository}}.wiki
        path: wiki
    - name: Install requirements
      run: |
          export PIP_BREAK_SYSTEM_PACKAGES=1
          pip3 install -r results/.github/scripts/requirements.txt
    - name: Generate wiki content
      run: |
        cd results
        python3 .github/scripts/generate_results_markdown.py results ../wiki --comparison-dir compare-results -v
    - name: Commit changes
      if: github.ref == 'refs/heads/main' && github.event_name == 'push'
      run: |
        cd wiki
        git config --local user.email "$GITHUB_ACTOR+github-actions@users.noreply.github.com"
        git config --local user.name "$GITHUB_ACTOR via action"
        git add .
        git diff-index --quiet HEAD || git commit -m "Update from github action $GITHUB_RUN_NUMBER - $GITHUB_SHA"
        git push


#  build-container:
#    needs: [find-changes]
#    name: Build and Publish Docker Image
#    runs-on: ubuntu-latest
#    if: needs.find-changes.outputs.docker == 'true'
#    timeout-minutes: 20
#    permissions:
#      packages: write
#    steps:
#      - name: Clone Tree
#        uses: actions/checkout@v4
#        with:
#          submodules: recursive
#
#      - name: Extract image metadata (tags, labels)
#        id: meta
#        uses: docker/metadata-action@v5
#        with:
#          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
#
#      - name: Set up Docker Buildx
#        uses: docker/setup-buildx-action@v1
#
#      - name: Login to GitHub Container Registry
#        uses: docker/login-action@v3
#        if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/main' }}
#        with:
#          registry: ${{ env.REGISTRY }}
#          username: ${{ github.actor }}
#          password: ${{ secrets.GITHUB_TOKEN }}
#
#      - name: Build and push image
#        uses: docker/build-push-action@v6
#        with:
#          context: .
#          push: ${{ github.event_name == 'push' && github.ref == 'refs/heads/main' }}
#          tags: |
#            ${{ steps.meta.outputs.tags }}
#            "${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest"
#          labels: ${{ steps.meta.outputs.labels }}
